@keyframes name-titile-decorator-slide-animation {
    from {
        transform: translateX(0%);
    }
    to {
        transform: translateX(-99%); /* 99% no hickup, 100% hickup */
    }
}
@keyframes rotate-180 {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(180deg);
    }
}

.CannotInteract{ /* special */
    pointer-events: none; /* Prevents interaction */
    user-select: none;    /* Disables text selection */
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none;    /* Firefox */
    -ms-user-select: none;     /* Internet Explorer/Edge */
}

.Component1Foundation{
    position: relative; /* ancestor Component1Foundation must have positino set to relative for its child CharacterListFoundation to look right */
    aspect-ratio: 2 / 1;
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: row;
}

.CornerAppearance{
    stroke-width: 0.05vw;
    fill: none;
    stroke: var(--dark-transparent);
}
.AlignTopLeftCorner{
    z-index: 10;
    position: absolute;
    top: 1vw;
    left: 1vw;
    width: 15vw;
    height: 15vw;
    display: flex;
    align-items: center;
    justify-content: center;
}
.AlignBottomLeftCorner{
    z-index: 10; /* above the blur effect */
    position: absolute;
    bottom: 1vw;
    left: 1vw;
    width: 15vw;
    height: 15vw;
    display: flex;
    align-items: center;
    justify-content: center;
}
.AlignBottomRightCorner{
    z-index: 10; /* above the blur effect */
    position: absolute;
    bottom: 1vw;
    right: 1vw;
    width: 15vw;
    height: 15vw;
    display: flex;
    align-items: center;
    justify-content: center;
}

.ThirdsCrossDecorator{
    stroke: var(--dark-transparent);
    stroke-width: 0.05vw;
}
.ThirdsCrossPlacement1{
    position: fixed;
    top: calc(50% - 25vw);
    left: 0vw;
}
.ThirdsCrossPlacement2{
    position: fixed;
    top: calc(50% - 25vw);
    left: 32%;
}
.ThirdsCrossPlacement3{
    position: fixed;
    top: calc(50% - 25vw);
    right: 32%;
}
.ThirdsCrossPlacement4{
    position: fixed;
    top: calc(50% - 25vw);
    right: 0;
}
.ThirdsCrossPlacement5{
    position: fixed;
    top: calc(50% - 9.5vw);
    left: 0;
}
.ThirdsCrossPlacement6{
    position: fixed;
    top: calc(50% - 9.5vw);
    left: 32%;
}
.ThirdsCrossPlacement7{
    position: fixed;
    top: calc(50% - 9.5vw);
    right: 32%;
}
.ThirdsCrossPlacement8{
    position: fixed;
    top: calc(50% - 9.5vw);
    right: 0;
}
.ThirdsCrossPlacement9{
    position: fixed;
    top: calc(50% + 7vw);
    left: 0;
    z-index: 10;
}
.ThirdsCrossPlacement10{
    position: fixed;
    top: calc(50% + 7vw);
    left: 32%;
    z-index: 10;
}
.ThirdsCrossPlacement11{
    position: fixed;
    top: calc(50% + 7vw);
    right: 32%;
    z-index: 10;
}
.ThirdsCrossPlacement12{
    position: fixed;
    top: calc(50% + 7vw);
    right: 0;
    z-index: 10;
}
.ThirdsCrossPlacement13{
    position: fixed;
    top: calc(50% + 23vw);
    left: 0;
    z-index: 10;
}
.ThirdsCrossPlacement14{
    position: fixed;
    top: calc(50% + 23vw);
    left: 32%;
    z-index: 10;
}
.ThirdsCrossPlacement15{
    position: fixed;
    top: calc(50% + 23vw);
    right: 32%;
    z-index: 10;
}
.ThirdsCrossPlacement16{
    position: fixed;
    top: calc(50% + 23vw);
    right: 0;
    z-index: 10;
}

.AlignCirclesDecorator{
    position: fixed;
    width: 75vw;
    height: 75vw;
    right: -5vw;
    bottom: calc(50% + 10vw);
    filter: blur(1px);

    transform:matrix(1.00,0.30,0.40,1.00,0,0);
    -ms-transform:matrix(1.00,0.30,0.40,1.00,0,0);
    -webkit-transform:matrix(1.00,0.30,0.40,1.00,0,0);
}
.CirclesDecoratorAppearace{
    width: 75vw;
    height: 75vw;
    fill: var(--dark-transparent);
    animation: rotate-180 30s linear infinite;
}

.ColorPaletteArray{
    position: fixed;
    width: 12vw;
    height: 1vw;
    bottom: calc(50% + 23vw);
    left: 15vw;
    display: flex;
    align-items: center;
    justify-content: center;

}
.ColorPaletteObject{
    width: 2vw;
    height: 1vw;
    margin-left: 0.5vw;
    transform: matrix(1, 0, -0.5, 1, 0, 0);
    border: 0.05vw solid var(--dark-transparent);
}
.ColorPalettePrimary{
    background-color: #3D3C42;
}
.ColorPaletteSecondary{
    background-color: none;
}
.ColorPaletteAccent{
    background-color: #927A72;
}
.ColorPaletteTheme{
    background-color: #CC012D;
}

.MiniCollageArray{
    height: 33%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: end;
}
.MiniCollageObject{
    margin-left: -1vw;
    width: 10vw;
    height: 7.5vw;
    border: 0.05vw solid var(--dark);
    background-color: var(--theme-nicolette);
/*    transform: matrix(1, 0, -0.5, 1, 0, 0);*/
    overflow: hidden;
    clip-path: polygon(100% 10%, 75% 90%, 0% 90%, 25% 10%);
}
.MiniCollageImage{
    position: relative;
    top: 17.5vw;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Keeps aspect ratio */
    transform: scale(7);
}

.NameTitleComponent{
    position: relative; /* allow title center title and put subtitle below centered title */
    height: 33%;
    display: flex;
    flex-direction: column;
    align-items: baseline;
    justify-content: center;
}
.NameTitleHeader{
    position: absolute; /* perfect center */
    color: var(--dark);
    text-shadow: 0.2vw 0.2vw 0.2vw var(--dark-transparent);
    font-family: "Instrument Serif", serif;
    font-size: 7.5vw;
}
.NameTitleSubText{
    position: absolute; /* same relation as title... */
    bottom: 1.75vw; /* ...but still below title */
    color: var(--dark);
    font-family: "Instrument Serif", serif;
    font-size: 2.5vw;
}

.ContinuteButtonComponent{
    height: 33%;
    display: flex;
    align-items: center;
    justify-content: center;
}
.ContinuteButtonBorder{
    width: 85%;
    height: 40%;
    border: 0.2vw solid var(--theme);
    border-radius: 0.5vw;
    padding: 0.5vw;
    display: flex;
    align-items: center;
    justify-content:center;
    backdrop-filter: blur(2.5px);
}
.ContinuteButtonStyle{
    width: 100%;
    height: 100%;
    background-color: var(--theme);
    color: var(--light);
    border: none;
    border-radius: 0.2vw;
    box-shadow: 0px 5px 10px var(--dark);
    font-family: "Do Hyeon", Serif;
    font-size: 2.5vw;
    display: flex;
    align-items: center;
    justify-content:end;
}
.ContinuteButtonArrow{
    width: 5vw;
}
.ContinuteButtonStyle:hover{
    cursor: pointer;
    background-color: var(--light);
    color: var(--light);
    transition: all ease 0.15s;
}

.LeftSection{
    width: 33%;
    height: 100%;
}
.CentreSection{
    width: 34%;
    height: 100%;
}
.RightSection{
    width: 33%;
    height: 100%;
}

.ImageSize{
    width: 100%;
}
.ImageShadow {
    filter: drop-shadow(-2vh 2vh 1vh var(--dark-transparent));
}

.NameTitleBackgroundDecoratorComponent{
    pointer-events: none;
    width: 300%;
    height: 33%;
}
.NameTitleBackgroundDecoratorText{
    font-size: 20vw;
    stroke: var(--dark-transparent);
    stroke-width: 0.05vw;
    fill: transparent;
    font-family: "Do Hyeon", serif;

    animation: name-titile-decorator-slide-animation 30s linear infinite;
}

.CharacterListFoundation{
    z-index: 9;
    position: absolute; /* ancestor Component1Foundation must have positino set to relative for its child CharacterListFoundation to look right */
    overflow: visible; /* allow selected character to overflow the borders of parent height*/
    bottom: 0vw;
    width: 100%;
    height: 33%;
    display: flex;
    align-items: end;
    justify-content: center;
    backdrop-filter: blur(5px);
    border-top: 0.1vw dashed var(--dark-transparent);
}
.CharacterItem{
    margin-left: 5px;
    margin-right: 5px;
    margin-bottom: 10.0px;
    width: 5vw;
    height: 90%;
    background-color: var(--theme-nicolette);
    border: none;
    border-radius: 5px;
    box-shadow: inset 1px 2px 10px var(--dark);
    transition: all 0.1s ease;
    overflow: hidden;
}
.CharacterItem:hover{
    position: relative;
    height: 105%;
    transition: all 0.1s ease;
    cursor: pointer;
}
.CharacterItemImageSize{
    overflow: hidden;
    position: relative;
    top: 10vw;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Keeps aspect ratio */
    transform: scale(5);
}
.CharacterItemSelected{
    height: 105%;
}

.Test{
    left: calc(50% - 250px);
    top: calc(50% - 250px);
    z-index: 19;
    position: fixed;
    width: 500px;
    height: 500px;
    backdrop-filter: blur(5px);
    border: 1px solid var(--dark);
    box-shadow: 5px 5px 15px var(--dark);
    border-radius: 5px;
}
